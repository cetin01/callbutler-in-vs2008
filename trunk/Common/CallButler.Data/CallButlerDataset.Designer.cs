///////////////////////////////////////////////////////////////////////////////////////////////
//
//    This File is Part of the CallButler Open Source PBX (http://www.codeplex.com/callbutler
//
//    Copyright (c) 2005-2008, Jim Heising
//    All rights reserved.
//
//    Redistribution and use in source and binary forms, with or without modification,
//    are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice,
//      this list of conditions and the following disclaimer.
//
//    * Redistributions in binary form must reproduce the above copyright notice,
//      this list of conditions and the following disclaimer in the documentation and/or
//      other materials provided with the distribution.
//
//    * Neither the name of Jim Heising nor the names of its contributors may be
//      used to endorse or promote products derived from this software without specific prior
//      written permission.
//
//    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
//    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//    IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
//    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
//    NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
//    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
//    POSSIBILITY OF SUCH DAMAGE.
//
///////////////////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1318
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WOSI.CallButler.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CallButlerDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CallButlerDataset : global::System.Data.DataSet {
        
        private GreetingsDataTable tableGreetings;
        
        private LocalizedGreetingsDataTable tableLocalizedGreetings;
        
        private CallHistoryDataTable tableCallHistory;
        
        private DepartmentsDataTable tableDepartments;
        
        private ExtensionsDataTable tableExtensions;
        
        private ExtensionContactNumbersDataTable tableExtensionContactNumbers;
        
        private VoicemailsDataTable tableVoicemails;
        
        private PersonalizedGreetingsDataTable tablePersonalizedGreetings;
        
        private ProvidersDataTable tableProviders;
        
        private ScriptSchedulesDataTable tableScriptSchedules;
        
        private global::System.Data.DataRelation relationFK_Greetings_LocalizedGreetings;
        
        private global::System.Data.DataRelation relationFK_Extensions_ExtensionContactNumbers;
        
        private global::System.Data.DataRelation relationFK_Extensions_Voicemails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.ExcludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CallButlerDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CallButlerDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Greetings"] != null)) {
                    base.Tables.Add(new GreetingsDataTable(ds.Tables["Greetings"]));
                }
                if ((ds.Tables["LocalizedGreetings"] != null)) {
                    base.Tables.Add(new LocalizedGreetingsDataTable(ds.Tables["LocalizedGreetings"]));
                }
                if ((ds.Tables["CallHistory"] != null)) {
                    base.Tables.Add(new CallHistoryDataTable(ds.Tables["CallHistory"]));
                }
                if ((ds.Tables["Departments"] != null)) {
                    base.Tables.Add(new DepartmentsDataTable(ds.Tables["Departments"]));
                }
                if ((ds.Tables["Extensions"] != null)) {
                    base.Tables.Add(new ExtensionsDataTable(ds.Tables["Extensions"]));
                }
                if ((ds.Tables["ExtensionContactNumbers"] != null)) {
                    base.Tables.Add(new ExtensionContactNumbersDataTable(ds.Tables["ExtensionContactNumbers"]));
                }
                if ((ds.Tables["Voicemails"] != null)) {
                    base.Tables.Add(new VoicemailsDataTable(ds.Tables["Voicemails"]));
                }
                if ((ds.Tables["PersonalizedGreetings"] != null)) {
                    base.Tables.Add(new PersonalizedGreetingsDataTable(ds.Tables["PersonalizedGreetings"]));
                }
                if ((ds.Tables["Providers"] != null)) {
                    base.Tables.Add(new ProvidersDataTable(ds.Tables["Providers"]));
                }
                if ((ds.Tables["ScriptSchedules"] != null)) {
                    base.Tables.Add(new ScriptSchedulesDataTable(ds.Tables["ScriptSchedules"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GreetingsDataTable Greetings {
            get {
                return this.tableGreetings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocalizedGreetingsDataTable LocalizedGreetings {
            get {
                return this.tableLocalizedGreetings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CallHistoryDataTable CallHistory {
            get {
                return this.tableCallHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartmentsDataTable Departments {
            get {
                return this.tableDepartments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExtensionsDataTable Extensions {
            get {
                return this.tableExtensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExtensionContactNumbersDataTable ExtensionContactNumbers {
            get {
                return this.tableExtensionContactNumbers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VoicemailsDataTable Voicemails {
            get {
                return this.tableVoicemails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PersonalizedGreetingsDataTable PersonalizedGreetings {
            get {
                return this.tablePersonalizedGreetings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProvidersDataTable Providers {
            get {
                return this.tableProviders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScriptSchedulesDataTable ScriptSchedules {
            get {
                return this.tableScriptSchedules;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CallButlerDataset cln = ((CallButlerDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Greetings"] != null)) {
                    base.Tables.Add(new GreetingsDataTable(ds.Tables["Greetings"]));
                }
                if ((ds.Tables["LocalizedGreetings"] != null)) {
                    base.Tables.Add(new LocalizedGreetingsDataTable(ds.Tables["LocalizedGreetings"]));
                }
                if ((ds.Tables["CallHistory"] != null)) {
                    base.Tables.Add(new CallHistoryDataTable(ds.Tables["CallHistory"]));
                }
                if ((ds.Tables["Departments"] != null)) {
                    base.Tables.Add(new DepartmentsDataTable(ds.Tables["Departments"]));
                }
                if ((ds.Tables["Extensions"] != null)) {
                    base.Tables.Add(new ExtensionsDataTable(ds.Tables["Extensions"]));
                }
                if ((ds.Tables["ExtensionContactNumbers"] != null)) {
                    base.Tables.Add(new ExtensionContactNumbersDataTable(ds.Tables["ExtensionContactNumbers"]));
                }
                if ((ds.Tables["Voicemails"] != null)) {
                    base.Tables.Add(new VoicemailsDataTable(ds.Tables["Voicemails"]));
                }
                if ((ds.Tables["PersonalizedGreetings"] != null)) {
                    base.Tables.Add(new PersonalizedGreetingsDataTable(ds.Tables["PersonalizedGreetings"]));
                }
                if ((ds.Tables["Providers"] != null)) {
                    base.Tables.Add(new ProvidersDataTable(ds.Tables["Providers"]));
                }
                if ((ds.Tables["ScriptSchedules"] != null)) {
                    base.Tables.Add(new ScriptSchedulesDataTable(ds.Tables["ScriptSchedules"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGreetings = ((GreetingsDataTable)(base.Tables["Greetings"]));
            if ((initTable == true)) {
                if ((this.tableGreetings != null)) {
                    this.tableGreetings.InitVars();
                }
            }
            this.tableLocalizedGreetings = ((LocalizedGreetingsDataTable)(base.Tables["LocalizedGreetings"]));
            if ((initTable == true)) {
                if ((this.tableLocalizedGreetings != null)) {
                    this.tableLocalizedGreetings.InitVars();
                }
            }
            this.tableCallHistory = ((CallHistoryDataTable)(base.Tables["CallHistory"]));
            if ((initTable == true)) {
                if ((this.tableCallHistory != null)) {
                    this.tableCallHistory.InitVars();
                }
            }
            this.tableDepartments = ((DepartmentsDataTable)(base.Tables["Departments"]));
            if ((initTable == true)) {
                if ((this.tableDepartments != null)) {
                    this.tableDepartments.InitVars();
                }
            }
            this.tableExtensions = ((ExtensionsDataTable)(base.Tables["Extensions"]));
            if ((initTable == true)) {
                if ((this.tableExtensions != null)) {
                    this.tableExtensions.InitVars();
                }
            }
            this.tableExtensionContactNumbers = ((ExtensionContactNumbersDataTable)(base.Tables["ExtensionContactNumbers"]));
            if ((initTable == true)) {
                if ((this.tableExtensionContactNumbers != null)) {
                    this.tableExtensionContactNumbers.InitVars();
                }
            }
            this.tableVoicemails = ((VoicemailsDataTable)(base.Tables["Voicemails"]));
            if ((initTable == true)) {
                if ((this.tableVoicemails != null)) {
                    this.tableVoicemails.InitVars();
                }
            }
            this.tablePersonalizedGreetings = ((PersonalizedGreetingsDataTable)(base.Tables["PersonalizedGreetings"]));
            if ((initTable == true)) {
                if ((this.tablePersonalizedGreetings != null)) {
                    this.tablePersonalizedGreetings.InitVars();
                }
            }
            this.tableProviders = ((ProvidersDataTable)(base.Tables["Providers"]));
            if ((initTable == true)) {
                if ((this.tableProviders != null)) {
                    this.tableProviders.InitVars();
                }
            }
            this.tableScriptSchedules = ((ScriptSchedulesDataTable)(base.Tables["ScriptSchedules"]));
            if ((initTable == true)) {
                if ((this.tableScriptSchedules != null)) {
                    this.tableScriptSchedules.InitVars();
                }
            }
            this.relationFK_Greetings_LocalizedGreetings = this.Relations["FK_Greetings_LocalizedGreetings"];
            this.relationFK_Extensions_ExtensionContactNumbers = this.Relations["FK_Extensions_ExtensionContactNumbers"];
            this.relationFK_Extensions_Voicemails = this.Relations["FK_Extensions_Voicemails"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CallButlerDataset";
            this.Prefix = "";
            this.Namespace = "http://www.worksoutsoft.com/Schemas/CallButlerDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.ExcludeSchema;
            this.tableGreetings = new GreetingsDataTable();
            base.Tables.Add(this.tableGreetings);
            this.tableLocalizedGreetings = new LocalizedGreetingsDataTable();
            base.Tables.Add(this.tableLocalizedGreetings);
            this.tableCallHistory = new CallHistoryDataTable();
            base.Tables.Add(this.tableCallHistory);
            this.tableDepartments = new DepartmentsDataTable();
            base.Tables.Add(this.tableDepartments);
            this.tableExtensions = new ExtensionsDataTable();
            base.Tables.Add(this.tableExtensions);
            this.tableExtensionContactNumbers = new ExtensionContactNumbersDataTable();
            base.Tables.Add(this.tableExtensionContactNumbers);
            this.tableVoicemails = new VoicemailsDataTable();
            base.Tables.Add(this.tableVoicemails);
            this.tablePersonalizedGreetings = new PersonalizedGreetingsDataTable();
            base.Tables.Add(this.tablePersonalizedGreetings);
            this.tableProviders = new ProvidersDataTable();
            base.Tables.Add(this.tableProviders);
            this.tableScriptSchedules = new ScriptSchedulesDataTable();
            base.Tables.Add(this.tableScriptSchedules);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Greetings_LocalizedGreetings", new global::System.Data.DataColumn[] {
                        this.tableGreetings.GreetingIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocalizedGreetings.GreetingIDColumn});
            this.tableLocalizedGreetings.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Extensions_ExtensionContactNumbers", new global::System.Data.DataColumn[] {
                        this.tableExtensions.ExtensionIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableExtensionContactNumbers.ExtensionIDColumn});
            this.tableExtensionContactNumbers.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Extensions_Voicemails", new global::System.Data.DataColumn[] {
                        this.tableExtensions.ExtensionIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableVoicemails.ExtensionIDColumn});
            this.tableVoicemails.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Greetings_LocalizedGreetings = new global::System.Data.DataRelation("FK_Greetings_LocalizedGreetings", new global::System.Data.DataColumn[] {
                        this.tableGreetings.GreetingIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLocalizedGreetings.GreetingIDColumn}, false);
            this.relationFK_Greetings_LocalizedGreetings.Nested = true;
            this.Relations.Add(this.relationFK_Greetings_LocalizedGreetings);
            this.relationFK_Extensions_ExtensionContactNumbers = new global::System.Data.DataRelation("FK_Extensions_ExtensionContactNumbers", new global::System.Data.DataColumn[] {
                        this.tableExtensions.ExtensionIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableExtensionContactNumbers.ExtensionIDColumn}, false);
            this.relationFK_Extensions_ExtensionContactNumbers.Nested = true;
            this.Relations.Add(this.relationFK_Extensions_ExtensionContactNumbers);
            this.relationFK_Extensions_Voicemails = new global::System.Data.DataRelation("FK_Extensions_Voicemails", new global::System.Data.DataColumn[] {
                        this.tableExtensions.ExtensionIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableVoicemails.ExtensionIDColumn}, false);
            this.relationFK_Extensions_Voicemails.Nested = true;
            this.Relations.Add(this.relationFK_Extensions_Voicemails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGreetings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLocalizedGreetings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCallHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExtensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExtensionContactNumbers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVoicemails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePersonalizedGreetings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProviders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeScriptSchedules() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CallButlerDataset ds = new CallButlerDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void GreetingsRowChangeEventHandler(object sender, GreetingsRowChangeEvent e);
        
        public delegate void LocalizedGreetingsRowChangeEventHandler(object sender, LocalizedGreetingsRowChangeEvent e);
        
        public delegate void CallHistoryRowChangeEventHandler(object sender, CallHistoryRowChangeEvent e);
        
        public delegate void DepartmentsRowChangeEventHandler(object sender, DepartmentsRowChangeEvent e);
        
        public delegate void ExtensionsRowChangeEventHandler(object sender, ExtensionsRowChangeEvent e);
        
        public delegate void ExtensionContactNumbersRowChangeEventHandler(object sender, ExtensionContactNumbersRowChangeEvent e);
        
        public delegate void VoicemailsRowChangeEventHandler(object sender, VoicemailsRowChangeEvent e);
        
        public delegate void PersonalizedGreetingsRowChangeEventHandler(object sender, PersonalizedGreetingsRowChangeEvent e);
        
        public delegate void ProvidersRowChangeEventHandler(object sender, ProvidersRowChangeEvent e);
        
        public delegate void ScriptSchedulesRowChangeEventHandler(object sender, ScriptSchedulesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GreetingsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnGreetingID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsDataTable() {
                this.TableName = "Greetings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GreetingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GreetingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreetingIDColumn {
                get {
                    return this.columnGreetingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow this[int index] {
                get {
                    return ((GreetingsRow)(this.Rows[index]));
                }
            }
            
            public event GreetingsRowChangeEventHandler GreetingsRowChanging;
            
            public event GreetingsRowChangeEventHandler GreetingsRowChanged;
            
            public event GreetingsRowChangeEventHandler GreetingsRowDeleting;
            
            public event GreetingsRowChangeEventHandler GreetingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGreetingsRow(GreetingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow AddGreetingsRow(int CustomerID, System.Guid GreetingID) {
                GreetingsRow rowGreetingsRow = ((GreetingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        GreetingID};
                rowGreetingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGreetingsRow);
                return rowGreetingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow FindByGreetingID(System.Guid GreetingID) {
                return ((GreetingsRow)(this.Rows.Find(new object[] {
                            GreetingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GreetingsDataTable cln = ((GreetingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GreetingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnGreetingID = base.Columns["GreetingID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnGreetingID = new global::System.Data.DataColumn("GreetingID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreetingID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGreetingID}, true));
                this.columnCustomerID.AllowDBNull = false;
                this.columnGreetingID.AllowDBNull = false;
                this.columnGreetingID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow NewGreetingsRow() {
                return ((GreetingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GreetingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GreetingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GreetingsRowChanged != null)) {
                    this.GreetingsRowChanged(this, new GreetingsRowChangeEvent(((GreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GreetingsRowChanging != null)) {
                    this.GreetingsRowChanging(this, new GreetingsRowChangeEvent(((GreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GreetingsRowDeleted != null)) {
                    this.GreetingsRowDeleted(this, new GreetingsRowChangeEvent(((GreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GreetingsRowDeleting != null)) {
                    this.GreetingsRowDeleting(this, new GreetingsRowChangeEvent(((GreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGreetingsRow(GreetingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GreetingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocalizedGreetingsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGreetingID;
            
            private global::System.Data.DataColumn columnLocalizedGreetingID;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnVoice;
            
            private global::System.Data.DataColumn columnLanguageID;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsDataTable() {
                this.TableName = "LocalizedGreetings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocalizedGreetingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LocalizedGreetingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GreetingIDColumn {
                get {
                    return this.columnGreetingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalizedGreetingIDColumn {
                get {
                    return this.columnLocalizedGreetingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoiceColumn {
                get {
                    return this.columnVoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LanguageIDColumn {
                get {
                    return this.columnLanguageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow this[int index] {
                get {
                    return ((LocalizedGreetingsRow)(this.Rows[index]));
                }
            }
            
            public event LocalizedGreetingsRowChangeEventHandler LocalizedGreetingsRowChanging;
            
            public event LocalizedGreetingsRowChangeEventHandler LocalizedGreetingsRowChanged;
            
            public event LocalizedGreetingsRowChangeEventHandler LocalizedGreetingsRowDeleting;
            
            public event LocalizedGreetingsRowChangeEventHandler LocalizedGreetingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLocalizedGreetingsRow(LocalizedGreetingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow AddLocalizedGreetingsRow(GreetingsRow parentGreetingsRowByFK_Greetings_LocalizedGreetings, System.Guid LocalizedGreetingID, string Data, string Voice, string LanguageID, short Type) {
                LocalizedGreetingsRow rowLocalizedGreetingsRow = ((LocalizedGreetingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        LocalizedGreetingID,
                        Data,
                        Voice,
                        LanguageID,
                        Type};
                if ((parentGreetingsRowByFK_Greetings_LocalizedGreetings != null)) {
                    columnValuesArray[0] = parentGreetingsRowByFK_Greetings_LocalizedGreetings[1];
                }
                rowLocalizedGreetingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocalizedGreetingsRow);
                return rowLocalizedGreetingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow FindByLocalizedGreetingID(System.Guid LocalizedGreetingID) {
                return ((LocalizedGreetingsRow)(this.Rows.Find(new object[] {
                            LocalizedGreetingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LocalizedGreetingsDataTable cln = ((LocalizedGreetingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocalizedGreetingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGreetingID = base.Columns["GreetingID"];
                this.columnLocalizedGreetingID = base.Columns["LocalizedGreetingID"];
                this.columnData = base.Columns["Data"];
                this.columnVoice = base.Columns["Voice"];
                this.columnLanguageID = base.Columns["LanguageID"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGreetingID = new global::System.Data.DataColumn("GreetingID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGreetingID);
                this.columnLocalizedGreetingID = new global::System.Data.DataColumn("LocalizedGreetingID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalizedGreetingID);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnVoice = new global::System.Data.DataColumn("Voice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoice);
                this.columnLanguageID = new global::System.Data.DataColumn("LanguageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguageID);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLocalizedGreetingID}, true));
                this.columnLocalizedGreetingID.AllowDBNull = false;
                this.columnLocalizedGreetingID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow NewLocalizedGreetingsRow() {
                return ((LocalizedGreetingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocalizedGreetingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LocalizedGreetingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocalizedGreetingsRowChanged != null)) {
                    this.LocalizedGreetingsRowChanged(this, new LocalizedGreetingsRowChangeEvent(((LocalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocalizedGreetingsRowChanging != null)) {
                    this.LocalizedGreetingsRowChanging(this, new LocalizedGreetingsRowChangeEvent(((LocalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocalizedGreetingsRowDeleted != null)) {
                    this.LocalizedGreetingsRowDeleted(this, new LocalizedGreetingsRowChangeEvent(((LocalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocalizedGreetingsRowDeleting != null)) {
                    this.LocalizedGreetingsRowDeleting(this, new LocalizedGreetingsRowChangeEvent(((LocalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLocalizedGreetingsRow(LocalizedGreetingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocalizedGreetingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CallHistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnTimestamp;
            
            private global::System.Data.DataColumn columnCallerDisplayName;
            
            private global::System.Data.DataColumn columnCallerUsername;
            
            private global::System.Data.DataColumn columnCallerHost;
            
            private global::System.Data.DataColumn columnCallDuration;
            
            private global::System.Data.DataColumn columnToDisplayName;
            
            private global::System.Data.DataColumn columnToUsername;
            
            private global::System.Data.DataColumn columnToHost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryDataTable() {
                this.TableName = "CallHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CallHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimestampColumn {
                get {
                    return this.columnTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerDisplayNameColumn {
                get {
                    return this.columnCallerDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerUsernameColumn {
                get {
                    return this.columnCallerUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerHostColumn {
                get {
                    return this.columnCallerHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallDurationColumn {
                get {
                    return this.columnCallDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDisplayNameColumn {
                get {
                    return this.columnToDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToUsernameColumn {
                get {
                    return this.columnToUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToHostColumn {
                get {
                    return this.columnToHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRow this[int index] {
                get {
                    return ((CallHistoryRow)(this.Rows[index]));
                }
            }
            
            public event CallHistoryRowChangeEventHandler CallHistoryRowChanging;
            
            public event CallHistoryRowChangeEventHandler CallHistoryRowChanged;
            
            public event CallHistoryRowChangeEventHandler CallHistoryRowDeleting;
            
            public event CallHistoryRowChangeEventHandler CallHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCallHistoryRow(CallHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRow AddCallHistoryRow(int CustomerID, System.Guid CallID, System.DateTime Timestamp, string CallerDisplayName, string CallerUsername, string CallerHost, System.TimeSpan CallDuration, string ToDisplayName, string ToUsername, string ToHost) {
                CallHistoryRow rowCallHistoryRow = ((CallHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        CallID,
                        Timestamp,
                        CallerDisplayName,
                        CallerUsername,
                        CallerHost,
                        CallDuration,
                        ToDisplayName,
                        ToUsername,
                        ToHost};
                rowCallHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCallHistoryRow);
                return rowCallHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRow FindByCallID(System.Guid CallID) {
                return ((CallHistoryRow)(this.Rows.Find(new object[] {
                            CallID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CallHistoryDataTable cln = ((CallHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CallHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCallID = base.Columns["CallID"];
                this.columnTimestamp = base.Columns["Timestamp"];
                this.columnCallerDisplayName = base.Columns["CallerDisplayName"];
                this.columnCallerUsername = base.Columns["CallerUsername"];
                this.columnCallerHost = base.Columns["CallerHost"];
                this.columnCallDuration = base.Columns["CallDuration"];
                this.columnToDisplayName = base.Columns["ToDisplayName"];
                this.columnToUsername = base.Columns["ToUsername"];
                this.columnToHost = base.Columns["ToHost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnTimestamp = new global::System.Data.DataColumn("Timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp);
                this.columnCallerDisplayName = new global::System.Data.DataColumn("CallerDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerDisplayName);
                this.columnCallerUsername = new global::System.Data.DataColumn("CallerUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerUsername);
                this.columnCallerHost = new global::System.Data.DataColumn("CallerHost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerHost);
                this.columnCallDuration = new global::System.Data.DataColumn("CallDuration", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallDuration);
                this.columnToDisplayName = new global::System.Data.DataColumn("ToDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDisplayName);
                this.columnToUsername = new global::System.Data.DataColumn("ToUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToUsername);
                this.columnToHost = new global::System.Data.DataColumn("ToHost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToHost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCallID}, true));
                this.columnCustomerID.AllowDBNull = false;
                this.columnCallID.AllowDBNull = false;
                this.columnCallID.Unique = true;
                this.columnTimestamp.DateTimeMode = global::System.Data.DataSetDateTime.Local;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRow NewCallHistoryRow() {
                return ((CallHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CallHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CallHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CallHistoryRowChanged != null)) {
                    this.CallHistoryRowChanged(this, new CallHistoryRowChangeEvent(((CallHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CallHistoryRowChanging != null)) {
                    this.CallHistoryRowChanging(this, new CallHistoryRowChangeEvent(((CallHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CallHistoryRowDeleted != null)) {
                    this.CallHistoryRowDeleted(this, new CallHistoryRowChangeEvent(((CallHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CallHistoryRowDeleting != null)) {
                    this.CallHistoryRowDeleting(this, new CallHistoryRowChangeEvent(((CallHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCallHistoryRow(CallHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CallHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartmentsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnDepartmentID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnData1;
            
            private global::System.Data.DataColumn columnData2;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnOptionNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsDataTable() {
                this.TableName = "Departments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartmentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartmentIDColumn {
                get {
                    return this.columnDepartmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Data1Column {
                get {
                    return this.columnData1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Data2Column {
                get {
                    return this.columnData2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptionNumberColumn {
                get {
                    return this.columnOptionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRow this[int index] {
                get {
                    return ((DepartmentsRow)(this.Rows[index]));
                }
            }
            
            public event DepartmentsRowChangeEventHandler DepartmentsRowChanging;
            
            public event DepartmentsRowChangeEventHandler DepartmentsRowChanged;
            
            public event DepartmentsRowChangeEventHandler DepartmentsRowDeleting;
            
            public event DepartmentsRowChangeEventHandler DepartmentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartmentsRow(DepartmentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRow AddDepartmentsRow(int CustomerID, System.Guid DepartmentID, string Name, short Type, string Data1, string Data2, bool Enabled, int OptionNumber) {
                DepartmentsRow rowDepartmentsRow = ((DepartmentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        DepartmentID,
                        Name,
                        Type,
                        Data1,
                        Data2,
                        Enabled,
                        OptionNumber};
                rowDepartmentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepartmentsRow);
                return rowDepartmentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRow FindByDepartmentID(System.Guid DepartmentID) {
                return ((DepartmentsRow)(this.Rows.Find(new object[] {
                            DepartmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepartmentsDataTable cln = ((DepartmentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepartmentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnDepartmentID = base.Columns["DepartmentID"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnData1 = base.Columns["Data1"];
                this.columnData2 = base.Columns["Data2"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnOptionNumber = base.Columns["OptionNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnDepartmentID = new global::System.Data.DataColumn("DepartmentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartmentID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnData1 = new global::System.Data.DataColumn("Data1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData1);
                this.columnData2 = new global::System.Data.DataColumn("Data2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData2);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnOptionNumber = new global::System.Data.DataColumn("OptionNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDepartmentID}, true));
                this.columnCustomerID.AllowDBNull = false;
                this.columnDepartmentID.AllowDBNull = false;
                this.columnDepartmentID.Unique = true;
                this.columnEnabled.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRow NewDepartmentsRow() {
                return ((DepartmentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepartmentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepartmentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartmentsRowChanged != null)) {
                    this.DepartmentsRowChanged(this, new DepartmentsRowChangeEvent(((DepartmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartmentsRowChanging != null)) {
                    this.DepartmentsRowChanging(this, new DepartmentsRowChangeEvent(((DepartmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartmentsRowDeleted != null)) {
                    this.DepartmentsRowDeleted(this, new DepartmentsRowChangeEvent(((DepartmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartmentsRowDeleting != null)) {
                    this.DepartmentsRowDeleting(this, new DepartmentsRowChangeEvent(((DepartmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartmentsRow(DepartmentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartmentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExtensionsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnExtensionID;
            
            private global::System.Data.DataColumn columnExtensionNumber;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnSearchNumber;
            
            private global::System.Data.DataColumn columnEnableSearch;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnEnableManagement;
            
            private global::System.Data.DataColumn columnDoNotDisturb;
            
            private global::System.Data.DataColumn columnEmailNotification;
            
            private global::System.Data.DataColumn columnEmailAddress;
            
            private global::System.Data.DataColumn columnEmailAttachment;
            
            private global::System.Data.DataColumn columnUseFindMePlugin;
            
            private global::System.Data.DataColumn columnFindMePluginData;
            
            private global::System.Data.DataColumn columnUseConferenceTransfer;
            
            private global::System.Data.DataColumn columnUseCallBlast;
            
            private global::System.Data.DataColumn columnPBXPassword;
            
            private global::System.Data.DataColumn columnEnableCallScreening;
            
            private global::System.Data.DataColumn columnEnableOutboundCalls;
            
            private global::System.Data.DataColumn columnAlternateExtension;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsDataTable() {
                this.TableName = "Extensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExtensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionIDColumn {
                get {
                    return this.columnExtensionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionNumberColumn {
                get {
                    return this.columnExtensionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchNumberColumn {
                get {
                    return this.columnSearchNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableSearchColumn {
                get {
                    return this.columnEnableSearch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableManagementColumn {
                get {
                    return this.columnEnableManagement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotDisturbColumn {
                get {
                    return this.columnDoNotDisturb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailNotificationColumn {
                get {
                    return this.columnEmailNotification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAttachmentColumn {
                get {
                    return this.columnEmailAttachment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseFindMePluginColumn {
                get {
                    return this.columnUseFindMePlugin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FindMePluginDataColumn {
                get {
                    return this.columnFindMePluginData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseConferenceTransferColumn {
                get {
                    return this.columnUseConferenceTransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseCallBlastColumn {
                get {
                    return this.columnUseCallBlast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBXPasswordColumn {
                get {
                    return this.columnPBXPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableCallScreeningColumn {
                get {
                    return this.columnEnableCallScreening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableOutboundCallsColumn {
                get {
                    return this.columnEnableOutboundCalls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlternateExtensionColumn {
                get {
                    return this.columnAlternateExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow this[int index] {
                get {
                    return ((ExtensionsRow)(this.Rows[index]));
                }
            }
            
            public event ExtensionsRowChangeEventHandler ExtensionsRowChanging;
            
            public event ExtensionsRowChangeEventHandler ExtensionsRowChanged;
            
            public event ExtensionsRowChangeEventHandler ExtensionsRowDeleting;
            
            public event ExtensionsRowChangeEventHandler ExtensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExtensionsRow(ExtensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow AddExtensionsRow(
                        int CustomerID, 
                        System.Guid ExtensionID, 
                        short ExtensionNumber, 
                        string FirstName, 
                        string LastName, 
                        string SearchNumber, 
                        bool EnableSearch, 
                        string Password, 
                        bool EnableManagement, 
                        bool DoNotDisturb, 
                        bool EmailNotification, 
                        string EmailAddress, 
                        bool EmailAttachment, 
                        bool UseFindMePlugin, 
                        string FindMePluginData, 
                        bool UseConferenceTransfer, 
                        bool UseCallBlast, 
                        string PBXPassword, 
                        bool EnableCallScreening, 
                        bool EnableOutboundCalls, 
                        System.Guid AlternateExtension) {
                ExtensionsRow rowExtensionsRow = ((ExtensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        ExtensionID,
                        ExtensionNumber,
                        FirstName,
                        LastName,
                        SearchNumber,
                        EnableSearch,
                        Password,
                        EnableManagement,
                        DoNotDisturb,
                        EmailNotification,
                        EmailAddress,
                        EmailAttachment,
                        UseFindMePlugin,
                        FindMePluginData,
                        UseConferenceTransfer,
                        UseCallBlast,
                        PBXPassword,
                        EnableCallScreening,
                        EnableOutboundCalls,
                        AlternateExtension};
                rowExtensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExtensionsRow);
                return rowExtensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow FindByExtensionID(System.Guid ExtensionID) {
                return ((ExtensionsRow)(this.Rows.Find(new object[] {
                            ExtensionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExtensionsDataTable cln = ((ExtensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExtensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnExtensionID = base.Columns["ExtensionID"];
                this.columnExtensionNumber = base.Columns["ExtensionNumber"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnSearchNumber = base.Columns["SearchNumber"];
                this.columnEnableSearch = base.Columns["EnableSearch"];
                this.columnPassword = base.Columns["Password"];
                this.columnEnableManagement = base.Columns["EnableManagement"];
                this.columnDoNotDisturb = base.Columns["DoNotDisturb"];
                this.columnEmailNotification = base.Columns["EmailNotification"];
                this.columnEmailAddress = base.Columns["EmailAddress"];
                this.columnEmailAttachment = base.Columns["EmailAttachment"];
                this.columnUseFindMePlugin = base.Columns["UseFindMePlugin"];
                this.columnFindMePluginData = base.Columns["FindMePluginData"];
                this.columnUseConferenceTransfer = base.Columns["UseConferenceTransfer"];
                this.columnUseCallBlast = base.Columns["UseCallBlast"];
                this.columnPBXPassword = base.Columns["PBXPassword"];
                this.columnEnableCallScreening = base.Columns["EnableCallScreening"];
                this.columnEnableOutboundCalls = base.Columns["EnableOutboundCalls"];
                this.columnAlternateExtension = base.Columns["AlternateExtension"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnExtensionID = new global::System.Data.DataColumn("ExtensionID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionID);
                this.columnExtensionNumber = new global::System.Data.DataColumn("ExtensionNumber", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionNumber);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnSearchNumber = new global::System.Data.DataColumn("SearchNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchNumber);
                this.columnEnableSearch = new global::System.Data.DataColumn("EnableSearch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableSearch);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnEnableManagement = new global::System.Data.DataColumn("EnableManagement", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableManagement);
                this.columnDoNotDisturb = new global::System.Data.DataColumn("DoNotDisturb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotDisturb);
                this.columnEmailNotification = new global::System.Data.DataColumn("EmailNotification", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailNotification);
                this.columnEmailAddress = new global::System.Data.DataColumn("EmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAddress);
                this.columnEmailAttachment = new global::System.Data.DataColumn("EmailAttachment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAttachment);
                this.columnUseFindMePlugin = new global::System.Data.DataColumn("UseFindMePlugin", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseFindMePlugin);
                this.columnFindMePluginData = new global::System.Data.DataColumn("FindMePluginData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFindMePluginData);
                this.columnUseConferenceTransfer = new global::System.Data.DataColumn("UseConferenceTransfer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseConferenceTransfer);
                this.columnUseCallBlast = new global::System.Data.DataColumn("UseCallBlast", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseCallBlast);
                this.columnPBXPassword = new global::System.Data.DataColumn("PBXPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBXPassword);
                this.columnEnableCallScreening = new global::System.Data.DataColumn("EnableCallScreening", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableCallScreening);
                this.columnEnableOutboundCalls = new global::System.Data.DataColumn("EnableOutboundCalls", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableOutboundCalls);
                this.columnAlternateExtension = new global::System.Data.DataColumn("AlternateExtension", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateExtension);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExtensionID}, true));
                this.columnCustomerID.AllowDBNull = false;
                this.columnExtensionID.AllowDBNull = false;
                this.columnExtensionID.Unique = true;
                this.columnExtensionNumber.AllowDBNull = false;
                this.columnEnableSearch.DefaultValue = ((bool)(true));
                this.columnEnableManagement.DefaultValue = ((bool)(false));
                this.columnDoNotDisturb.DefaultValue = ((bool)(false));
                this.columnEmailNotification.DefaultValue = ((bool)(false));
                this.columnEmailAttachment.DefaultValue = ((bool)(false));
                this.columnUseFindMePlugin.DefaultValue = ((bool)(false));
                this.columnUseConferenceTransfer.DefaultValue = ((bool)(true));
                this.columnUseCallBlast.AllowDBNull = false;
                this.columnUseCallBlast.DefaultValue = ((bool)(false));
                this.columnEnableCallScreening.AllowDBNull = false;
                this.columnEnableCallScreening.DefaultValue = ((bool)(true));
                this.columnEnableOutboundCalls.AllowDBNull = false;
                this.columnEnableOutboundCalls.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow NewExtensionsRow() {
                return ((ExtensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExtensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExtensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExtensionsRowChanged != null)) {
                    this.ExtensionsRowChanged(this, new ExtensionsRowChangeEvent(((ExtensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExtensionsRowChanging != null)) {
                    this.ExtensionsRowChanging(this, new ExtensionsRowChangeEvent(((ExtensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExtensionsRowDeleted != null)) {
                    this.ExtensionsRowDeleted(this, new ExtensionsRowChangeEvent(((ExtensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExtensionsRowDeleting != null)) {
                    this.ExtensionsRowDeleting(this, new ExtensionsRowChangeEvent(((ExtensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExtensionsRow(ExtensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExtensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExtensionContactNumbersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnExtensionID;
            
            private global::System.Data.DataColumn columnExtensionContactNumberID;
            
            private global::System.Data.DataColumn columnContactNumber;
            
            private global::System.Data.DataColumn columnPriority;
            
            private global::System.Data.DataColumn columnHoursOfOperation;
            
            private global::System.Data.DataColumn columnTimeout;
            
            private global::System.Data.DataColumn columnHasHoursOfOperation;
            
            private global::System.Data.DataColumn columnOnline;
            
            private global::System.Data.DataColumn columnHoursOfOperationUTCOffset;
            
            private global::System.Data.DataColumn columnCallPBXPhone;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersDataTable() {
                this.TableName = "ExtensionContactNumbers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtensionContactNumbersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExtensionContactNumbersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionIDColumn {
                get {
                    return this.columnExtensionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionContactNumberIDColumn {
                get {
                    return this.columnExtensionContactNumberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNumberColumn {
                get {
                    return this.columnContactNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoursOfOperationColumn {
                get {
                    return this.columnHoursOfOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeoutColumn {
                get {
                    return this.columnTimeout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasHoursOfOperationColumn {
                get {
                    return this.columnHasHoursOfOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineColumn {
                get {
                    return this.columnOnline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoursOfOperationUTCOffsetColumn {
                get {
                    return this.columnHoursOfOperationUTCOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallPBXPhoneColumn {
                get {
                    return this.columnCallPBXPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow this[int index] {
                get {
                    return ((ExtensionContactNumbersRow)(this.Rows[index]));
                }
            }
            
            public event ExtensionContactNumbersRowChangeEventHandler ExtensionContactNumbersRowChanging;
            
            public event ExtensionContactNumbersRowChangeEventHandler ExtensionContactNumbersRowChanged;
            
            public event ExtensionContactNumbersRowChangeEventHandler ExtensionContactNumbersRowDeleting;
            
            public event ExtensionContactNumbersRowChangeEventHandler ExtensionContactNumbersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExtensionContactNumbersRow(ExtensionContactNumbersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow AddExtensionContactNumbersRow(ExtensionsRow parentExtensionsRowByFK_Extensions_ExtensionContactNumbers, System.Guid ExtensionContactNumberID, string ContactNumber, short Priority, string HoursOfOperation, short Timeout, bool HasHoursOfOperation, bool Online, System.TimeSpan HoursOfOperationUTCOffset, bool CallPBXPhone, short Type) {
                ExtensionContactNumbersRow rowExtensionContactNumbersRow = ((ExtensionContactNumbersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExtensionContactNumberID,
                        ContactNumber,
                        Priority,
                        HoursOfOperation,
                        Timeout,
                        HasHoursOfOperation,
                        Online,
                        HoursOfOperationUTCOffset,
                        CallPBXPhone,
                        Type};
                if ((parentExtensionsRowByFK_Extensions_ExtensionContactNumbers != null)) {
                    columnValuesArray[0] = parentExtensionsRowByFK_Extensions_ExtensionContactNumbers[1];
                }
                rowExtensionContactNumbersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExtensionContactNumbersRow);
                return rowExtensionContactNumbersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow FindByExtensionContactNumberID(System.Guid ExtensionContactNumberID) {
                return ((ExtensionContactNumbersRow)(this.Rows.Find(new object[] {
                            ExtensionContactNumberID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExtensionContactNumbersDataTable cln = ((ExtensionContactNumbersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExtensionContactNumbersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnExtensionID = base.Columns["ExtensionID"];
                this.columnExtensionContactNumberID = base.Columns["ExtensionContactNumberID"];
                this.columnContactNumber = base.Columns["ContactNumber"];
                this.columnPriority = base.Columns["Priority"];
                this.columnHoursOfOperation = base.Columns["HoursOfOperation"];
                this.columnTimeout = base.Columns["Timeout"];
                this.columnHasHoursOfOperation = base.Columns["HasHoursOfOperation"];
                this.columnOnline = base.Columns["Online"];
                this.columnHoursOfOperationUTCOffset = base.Columns["HoursOfOperationUTCOffset"];
                this.columnCallPBXPhone = base.Columns["CallPBXPhone"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnExtensionID = new global::System.Data.DataColumn("ExtensionID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionID);
                this.columnExtensionContactNumberID = new global::System.Data.DataColumn("ExtensionContactNumberID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionContactNumberID);
                this.columnContactNumber = new global::System.Data.DataColumn("ContactNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNumber);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.columnHoursOfOperation = new global::System.Data.DataColumn("HoursOfOperation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursOfOperation);
                this.columnTimeout = new global::System.Data.DataColumn("Timeout", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeout);
                this.columnHasHoursOfOperation = new global::System.Data.DataColumn("HasHoursOfOperation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasHoursOfOperation);
                this.columnOnline = new global::System.Data.DataColumn("Online", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnline);
                this.columnHoursOfOperationUTCOffset = new global::System.Data.DataColumn("HoursOfOperationUTCOffset", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursOfOperationUTCOffset);
                this.columnCallPBXPhone = new global::System.Data.DataColumn("CallPBXPhone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallPBXPhone);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnExtensionContactNumberID}, true));
                this.columnExtensionID.AllowDBNull = false;
                this.columnExtensionContactNumberID.AllowDBNull = false;
                this.columnExtensionContactNumberID.Unique = true;
                this.columnHasHoursOfOperation.DefaultValue = ((bool)(false));
                this.columnOnline.DefaultValue = ((bool)(true));
                this.columnCallPBXPhone.AllowDBNull = false;
                this.columnCallPBXPhone.DefaultValue = ((bool)(false));
                this.columnType.AllowDBNull = false;
                this.columnType.DefaultValue = ((short)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow NewExtensionContactNumbersRow() {
                return ((ExtensionContactNumbersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExtensionContactNumbersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExtensionContactNumbersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExtensionContactNumbersRowChanged != null)) {
                    this.ExtensionContactNumbersRowChanged(this, new ExtensionContactNumbersRowChangeEvent(((ExtensionContactNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExtensionContactNumbersRowChanging != null)) {
                    this.ExtensionContactNumbersRowChanging(this, new ExtensionContactNumbersRowChangeEvent(((ExtensionContactNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExtensionContactNumbersRowDeleted != null)) {
                    this.ExtensionContactNumbersRowDeleted(this, new ExtensionContactNumbersRowChangeEvent(((ExtensionContactNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExtensionContactNumbersRowDeleting != null)) {
                    this.ExtensionContactNumbersRowDeleting(this, new ExtensionContactNumbersRowChangeEvent(((ExtensionContactNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExtensionContactNumbersRow(ExtensionContactNumbersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExtensionContactNumbersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VoicemailsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnVoicemailID;
            
            private global::System.Data.DataColumn columnExtensionID;
            
            private global::System.Data.DataColumn columnTimestamp;
            
            private global::System.Data.DataColumn columnCallerDisplayName;
            
            private global::System.Data.DataColumn columnCallerUsername;
            
            private global::System.Data.DataColumn columnCallerHost;
            
            private global::System.Data.DataColumn columnIsNew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsDataTable() {
                this.TableName = "Voicemails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VoicemailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VoicemailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoicemailIDColumn {
                get {
                    return this.columnVoicemailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtensionIDColumn {
                get {
                    return this.columnExtensionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimestampColumn {
                get {
                    return this.columnTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerDisplayNameColumn {
                get {
                    return this.columnCallerDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerUsernameColumn {
                get {
                    return this.columnCallerUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerHostColumn {
                get {
                    return this.columnCallerHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNewColumn {
                get {
                    return this.columnIsNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow this[int index] {
                get {
                    return ((VoicemailsRow)(this.Rows[index]));
                }
            }
            
            public event VoicemailsRowChangeEventHandler VoicemailsRowChanging;
            
            public event VoicemailsRowChangeEventHandler VoicemailsRowChanged;
            
            public event VoicemailsRowChangeEventHandler VoicemailsRowDeleting;
            
            public event VoicemailsRowChangeEventHandler VoicemailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVoicemailsRow(VoicemailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow AddVoicemailsRow(System.Guid VoicemailID, ExtensionsRow parentExtensionsRowByFK_Extensions_Voicemails, System.DateTime Timestamp, string CallerDisplayName, string CallerUsername, string CallerHost, bool IsNew) {
                VoicemailsRow rowVoicemailsRow = ((VoicemailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VoicemailID,
                        null,
                        Timestamp,
                        CallerDisplayName,
                        CallerUsername,
                        CallerHost,
                        IsNew};
                if ((parentExtensionsRowByFK_Extensions_Voicemails != null)) {
                    columnValuesArray[1] = parentExtensionsRowByFK_Extensions_Voicemails[1];
                }
                rowVoicemailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVoicemailsRow);
                return rowVoicemailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow FindByVoicemailID(System.Guid VoicemailID) {
                return ((VoicemailsRow)(this.Rows.Find(new object[] {
                            VoicemailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VoicemailsDataTable cln = ((VoicemailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VoicemailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVoicemailID = base.Columns["VoicemailID"];
                this.columnExtensionID = base.Columns["ExtensionID"];
                this.columnTimestamp = base.Columns["Timestamp"];
                this.columnCallerDisplayName = base.Columns["CallerDisplayName"];
                this.columnCallerUsername = base.Columns["CallerUsername"];
                this.columnCallerHost = base.Columns["CallerHost"];
                this.columnIsNew = base.Columns["IsNew"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVoicemailID = new global::System.Data.DataColumn("VoicemailID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoicemailID);
                this.columnExtensionID = new global::System.Data.DataColumn("ExtensionID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionID);
                this.columnTimestamp = new global::System.Data.DataColumn("Timestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimestamp);
                this.columnCallerDisplayName = new global::System.Data.DataColumn("CallerDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerDisplayName);
                this.columnCallerUsername = new global::System.Data.DataColumn("CallerUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerUsername);
                this.columnCallerHost = new global::System.Data.DataColumn("CallerHost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerHost);
                this.columnIsNew = new global::System.Data.DataColumn("IsNew", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNew);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVoicemailID}, true));
                this.columnVoicemailID.AllowDBNull = false;
                this.columnVoicemailID.Unique = true;
                this.columnExtensionID.AllowDBNull = false;
                this.columnIsNew.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow NewVoicemailsRow() {
                return ((VoicemailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VoicemailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VoicemailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VoicemailsRowChanged != null)) {
                    this.VoicemailsRowChanged(this, new VoicemailsRowChangeEvent(((VoicemailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VoicemailsRowChanging != null)) {
                    this.VoicemailsRowChanging(this, new VoicemailsRowChangeEvent(((VoicemailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VoicemailsRowDeleted != null)) {
                    this.VoicemailsRowDeleted(this, new VoicemailsRowChangeEvent(((VoicemailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VoicemailsRowDeleting != null)) {
                    this.VoicemailsRowDeleting(this, new VoicemailsRowChangeEvent(((VoicemailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVoicemailsRow(VoicemailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VoicemailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PersonalizedGreetingsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnPersonalizedGreetingID;
            
            private global::System.Data.DataColumn columnCallerDisplayName;
            
            private global::System.Data.DataColumn columnCallerUsername;
            
            private global::System.Data.DataColumn columnCallerHost;
            
            private global::System.Data.DataColumn columnDialedUsername;
            
            private global::System.Data.DataColumn columnDialedHost;
            
            private global::System.Data.DataColumn columnUseRegex;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnPlayOnce;
            
            private global::System.Data.DataColumn columnHasPlayed;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsDataTable() {
                this.TableName = "PersonalizedGreetings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PersonalizedGreetingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PersonalizedGreetingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalizedGreetingIDColumn {
                get {
                    return this.columnPersonalizedGreetingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerDisplayNameColumn {
                get {
                    return this.columnCallerDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerUsernameColumn {
                get {
                    return this.columnCallerUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallerHostColumn {
                get {
                    return this.columnCallerHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DialedUsernameColumn {
                get {
                    return this.columnDialedUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DialedHostColumn {
                get {
                    return this.columnDialedHost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseRegexColumn {
                get {
                    return this.columnUseRegex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlayOnceColumn {
                get {
                    return this.columnPlayOnce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasPlayedColumn {
                get {
                    return this.columnHasPlayed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRow this[int index] {
                get {
                    return ((PersonalizedGreetingsRow)(this.Rows[index]));
                }
            }
            
            public event PersonalizedGreetingsRowChangeEventHandler PersonalizedGreetingsRowChanging;
            
            public event PersonalizedGreetingsRowChangeEventHandler PersonalizedGreetingsRowChanged;
            
            public event PersonalizedGreetingsRowChangeEventHandler PersonalizedGreetingsRowDeleting;
            
            public event PersonalizedGreetingsRowChangeEventHandler PersonalizedGreetingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPersonalizedGreetingsRow(PersonalizedGreetingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRow AddPersonalizedGreetingsRow(int CustomerID, System.Guid PersonalizedGreetingID, string CallerDisplayName, string CallerUsername, string CallerHost, string DialedUsername, string DialedHost, bool UseRegex, short Type, string Data, bool PlayOnce, bool HasPlayed, string Notes) {
                PersonalizedGreetingsRow rowPersonalizedGreetingsRow = ((PersonalizedGreetingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        PersonalizedGreetingID,
                        CallerDisplayName,
                        CallerUsername,
                        CallerHost,
                        DialedUsername,
                        DialedHost,
                        UseRegex,
                        Type,
                        Data,
                        PlayOnce,
                        HasPlayed,
                        Notes};
                rowPersonalizedGreetingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPersonalizedGreetingsRow);
                return rowPersonalizedGreetingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRow FindByPersonalizedGreetingID(System.Guid PersonalizedGreetingID) {
                return ((PersonalizedGreetingsRow)(this.Rows.Find(new object[] {
                            PersonalizedGreetingID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PersonalizedGreetingsDataTable cln = ((PersonalizedGreetingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PersonalizedGreetingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnPersonalizedGreetingID = base.Columns["PersonalizedGreetingID"];
                this.columnCallerDisplayName = base.Columns["CallerDisplayName"];
                this.columnCallerUsername = base.Columns["CallerUsername"];
                this.columnCallerHost = base.Columns["CallerHost"];
                this.columnDialedUsername = base.Columns["DialedUsername"];
                this.columnDialedHost = base.Columns["DialedHost"];
                this.columnUseRegex = base.Columns["UseRegex"];
                this.columnType = base.Columns["Type"];
                this.columnData = base.Columns["Data"];
                this.columnPlayOnce = base.Columns["PlayOnce"];
                this.columnHasPlayed = base.Columns["HasPlayed"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnPersonalizedGreetingID = new global::System.Data.DataColumn("PersonalizedGreetingID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonalizedGreetingID);
                this.columnCallerDisplayName = new global::System.Data.DataColumn("CallerDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerDisplayName);
                this.columnCallerUsername = new global::System.Data.DataColumn("CallerUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerUsername);
                this.columnCallerHost = new global::System.Data.DataColumn("CallerHost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallerHost);
                this.columnDialedUsername = new global::System.Data.DataColumn("DialedUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDialedUsername);
                this.columnDialedHost = new global::System.Data.DataColumn("DialedHost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDialedHost);
                this.columnUseRegex = new global::System.Data.DataColumn("UseRegex", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseRegex);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnPlayOnce = new global::System.Data.DataColumn("PlayOnce", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlayOnce);
                this.columnHasPlayed = new global::System.Data.DataColumn("HasPlayed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasPlayed);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPersonalizedGreetingID}, true));
                this.columnPersonalizedGreetingID.AllowDBNull = false;
                this.columnPersonalizedGreetingID.Unique = true;
                this.columnUseRegex.DefaultValue = ((bool)(false));
                this.columnPlayOnce.DefaultValue = ((bool)(false));
                this.columnHasPlayed.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRow NewPersonalizedGreetingsRow() {
                return ((PersonalizedGreetingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PersonalizedGreetingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PersonalizedGreetingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PersonalizedGreetingsRowChanged != null)) {
                    this.PersonalizedGreetingsRowChanged(this, new PersonalizedGreetingsRowChangeEvent(((PersonalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PersonalizedGreetingsRowChanging != null)) {
                    this.PersonalizedGreetingsRowChanging(this, new PersonalizedGreetingsRowChangeEvent(((PersonalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PersonalizedGreetingsRowDeleted != null)) {
                    this.PersonalizedGreetingsRowDeleted(this, new PersonalizedGreetingsRowChangeEvent(((PersonalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PersonalizedGreetingsRowDeleting != null)) {
                    this.PersonalizedGreetingsRowDeleting(this, new PersonalizedGreetingsRowChangeEvent(((PersonalizedGreetingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePersonalizedGreetingsRow(PersonalizedGreetingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PersonalizedGreetingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProvidersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnProviderID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnUsername;
            
            private global::System.Data.DataColumn columnAuthUsername;
            
            private global::System.Data.DataColumn columnAuthPassword;
            
            private global::System.Data.DataColumn columnDomain;
            
            private global::System.Data.DataColumn columnSIPProxy;
            
            private global::System.Data.DataColumn columnSIPRegistrar;
            
            private global::System.Data.DataColumn columnExpires;
            
            private global::System.Data.DataColumn columnIsEnabled;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnIsDefault;
            
            private global::System.Data.DataColumn columnEnableRegistration;
            
            private global::System.Data.DataColumn columnExtraData;
            
            private global::System.Data.DataColumn columnPluginID;
            
            private global::System.Data.DataColumn columnAutoDetectAudio;
            
            private global::System.Data.DataColumn columnSupressOutboundUsername;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersDataTable() {
                this.TableName = "Providers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProvidersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProvidersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderIDColumn {
                get {
                    return this.columnProviderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsernameColumn {
                get {
                    return this.columnUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthUsernameColumn {
                get {
                    return this.columnAuthUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthPasswordColumn {
                get {
                    return this.columnAuthPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DomainColumn {
                get {
                    return this.columnDomain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPProxyColumn {
                get {
                    return this.columnSIPProxy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIPRegistrarColumn {
                get {
                    return this.columnSIPRegistrar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpiresColumn {
                get {
                    return this.columnExpires;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsEnabledColumn {
                get {
                    return this.columnIsEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableRegistrationColumn {
                get {
                    return this.columnEnableRegistration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraDataColumn {
                get {
                    return this.columnExtraData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PluginIDColumn {
                get {
                    return this.columnPluginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoDetectAudioColumn {
                get {
                    return this.columnAutoDetectAudio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupressOutboundUsernameColumn {
                get {
                    return this.columnSupressOutboundUsername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRow this[int index] {
                get {
                    return ((ProvidersRow)(this.Rows[index]));
                }
            }
            
            public event ProvidersRowChangeEventHandler ProvidersRowChanging;
            
            public event ProvidersRowChangeEventHandler ProvidersRowChanged;
            
            public event ProvidersRowChangeEventHandler ProvidersRowDeleting;
            
            public event ProvidersRowChangeEventHandler ProvidersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProvidersRow(ProvidersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRow AddProvidersRow(
                        int CustomerID, 
                        System.Guid ProviderID, 
                        string Name, 
                        string DisplayName, 
                        string Username, 
                        string AuthUsername, 
                        string AuthPassword, 
                        string Domain, 
                        string SIPProxy, 
                        string SIPRegistrar, 
                        int Expires, 
                        bool IsEnabled, 
                        string Status, 
                        bool IsDefault, 
                        bool EnableRegistration, 
                        string ExtraData, 
                        string PluginID, 
                        bool AutoDetectAudio, 
                        bool SupressOutboundUsername) {
                ProvidersRow rowProvidersRow = ((ProvidersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        ProviderID,
                        Name,
                        DisplayName,
                        Username,
                        AuthUsername,
                        AuthPassword,
                        Domain,
                        SIPProxy,
                        SIPRegistrar,
                        Expires,
                        IsEnabled,
                        Status,
                        IsDefault,
                        EnableRegistration,
                        ExtraData,
                        PluginID,
                        AutoDetectAudio,
                        SupressOutboundUsername};
                rowProvidersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProvidersRow);
                return rowProvidersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRow FindByProviderID(System.Guid ProviderID) {
                return ((ProvidersRow)(this.Rows.Find(new object[] {
                            ProviderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProvidersDataTable cln = ((ProvidersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProvidersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnProviderID = base.Columns["ProviderID"];
                this.columnName = base.Columns["Name"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnUsername = base.Columns["Username"];
                this.columnAuthUsername = base.Columns["AuthUsername"];
                this.columnAuthPassword = base.Columns["AuthPassword"];
                this.columnDomain = base.Columns["Domain"];
                this.columnSIPProxy = base.Columns["SIPProxy"];
                this.columnSIPRegistrar = base.Columns["SIPRegistrar"];
                this.columnExpires = base.Columns["Expires"];
                this.columnIsEnabled = base.Columns["IsEnabled"];
                this.columnStatus = base.Columns["Status"];
                this.columnIsDefault = base.Columns["IsDefault"];
                this.columnEnableRegistration = base.Columns["EnableRegistration"];
                this.columnExtraData = base.Columns["ExtraData"];
                this.columnPluginID = base.Columns["PluginID"];
                this.columnAutoDetectAudio = base.Columns["AutoDetectAudio"];
                this.columnSupressOutboundUsername = base.Columns["SupressOutboundUsername"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnProviderID = new global::System.Data.DataColumn("ProviderID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnUsername = new global::System.Data.DataColumn("Username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsername);
                this.columnAuthUsername = new global::System.Data.DataColumn("AuthUsername", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthUsername);
                this.columnAuthPassword = new global::System.Data.DataColumn("AuthPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthPassword);
                this.columnDomain = new global::System.Data.DataColumn("Domain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomain);
                this.columnSIPProxy = new global::System.Data.DataColumn("SIPProxy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPProxy);
                this.columnSIPRegistrar = new global::System.Data.DataColumn("SIPRegistrar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPRegistrar);
                this.columnExpires = new global::System.Data.DataColumn("Expires", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpires);
                this.columnIsEnabled = new global::System.Data.DataColumn("IsEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEnabled);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnIsDefault = new global::System.Data.DataColumn("IsDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefault);
                this.columnEnableRegistration = new global::System.Data.DataColumn("EnableRegistration", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableRegistration);
                this.columnExtraData = new global::System.Data.DataColumn("ExtraData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraData);
                this.columnPluginID = new global::System.Data.DataColumn("PluginID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPluginID);
                this.columnAutoDetectAudio = new global::System.Data.DataColumn("AutoDetectAudio", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoDetectAudio);
                this.columnSupressOutboundUsername = new global::System.Data.DataColumn("SupressOutboundUsername", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupressOutboundUsername);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProviderID}, true));
                this.columnProviderID.AllowDBNull = false;
                this.columnProviderID.Unique = true;
                this.columnExpires.AllowDBNull = false;
                this.columnExpires.DefaultValue = ((int)(30));
                this.columnIsEnabled.DefaultValue = ((bool)(true));
                this.columnIsDefault.DefaultValue = ((bool)(false));
                this.columnEnableRegistration.DefaultValue = ((bool)(true));
                this.columnAutoDetectAudio.AllowDBNull = false;
                this.columnAutoDetectAudio.DefaultValue = ((bool)(false));
                this.columnSupressOutboundUsername.AllowDBNull = false;
                this.columnSupressOutboundUsername.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRow NewProvidersRow() {
                return ((ProvidersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProvidersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProvidersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProvidersRowChanged != null)) {
                    this.ProvidersRowChanged(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProvidersRowChanging != null)) {
                    this.ProvidersRowChanging(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProvidersRowDeleted != null)) {
                    this.ProvidersRowDeleted(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProvidersRowDeleting != null)) {
                    this.ProvidersRowDeleting(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProvidersRow(ProvidersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProvidersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScriptSchedulesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnScriptScheduleID;
            
            private global::System.Data.DataColumn columnScriptLocation;
            
            private global::System.Data.DataColumn columnPriority;
            
            private global::System.Data.DataColumn columnHasHoursOfOperation;
            
            private global::System.Data.DataColumn columnHoursOfOperation;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnHoursOfOperationUTCOffset;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesDataTable() {
                this.TableName = "ScriptSchedules";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScriptSchedulesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ScriptSchedulesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScriptScheduleIDColumn {
                get {
                    return this.columnScriptScheduleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScriptLocationColumn {
                get {
                    return this.columnScriptLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasHoursOfOperationColumn {
                get {
                    return this.columnHasHoursOfOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoursOfOperationColumn {
                get {
                    return this.columnHoursOfOperation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HoursOfOperationUTCOffsetColumn {
                get {
                    return this.columnHoursOfOperationUTCOffset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRow this[int index] {
                get {
                    return ((ScriptSchedulesRow)(this.Rows[index]));
                }
            }
            
            public event ScriptSchedulesRowChangeEventHandler ScriptSchedulesRowChanging;
            
            public event ScriptSchedulesRowChangeEventHandler ScriptSchedulesRowChanged;
            
            public event ScriptSchedulesRowChangeEventHandler ScriptSchedulesRowDeleting;
            
            public event ScriptSchedulesRowChangeEventHandler ScriptSchedulesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddScriptSchedulesRow(ScriptSchedulesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRow AddScriptSchedulesRow(int CustomerID, System.Guid ScriptScheduleID, string ScriptLocation, int Priority, bool HasHoursOfOperation, string HoursOfOperation, string Name, bool Enabled, System.TimeSpan HoursOfOperationUTCOffset) {
                ScriptSchedulesRow rowScriptSchedulesRow = ((ScriptSchedulesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        ScriptScheduleID,
                        ScriptLocation,
                        Priority,
                        HasHoursOfOperation,
                        HoursOfOperation,
                        Name,
                        Enabled,
                        HoursOfOperationUTCOffset};
                rowScriptSchedulesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScriptSchedulesRow);
                return rowScriptSchedulesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRow FindByScriptScheduleID(System.Guid ScriptScheduleID) {
                return ((ScriptSchedulesRow)(this.Rows.Find(new object[] {
                            ScriptScheduleID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ScriptSchedulesDataTable cln = ((ScriptSchedulesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScriptSchedulesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnScriptScheduleID = base.Columns["ScriptScheduleID"];
                this.columnScriptLocation = base.Columns["ScriptLocation"];
                this.columnPriority = base.Columns["Priority"];
                this.columnHasHoursOfOperation = base.Columns["HasHoursOfOperation"];
                this.columnHoursOfOperation = base.Columns["HoursOfOperation"];
                this.columnName = base.Columns["Name"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnHoursOfOperationUTCOffset = base.Columns["HoursOfOperationUTCOffset"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnScriptScheduleID = new global::System.Data.DataColumn("ScriptScheduleID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScriptScheduleID);
                this.columnScriptLocation = new global::System.Data.DataColumn("ScriptLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScriptLocation);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.columnHasHoursOfOperation = new global::System.Data.DataColumn("HasHoursOfOperation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasHoursOfOperation);
                this.columnHoursOfOperation = new global::System.Data.DataColumn("HoursOfOperation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursOfOperation);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnHoursOfOperationUTCOffset = new global::System.Data.DataColumn("HoursOfOperationUTCOffset", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoursOfOperationUTCOffset);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnScriptScheduleID}, true));
                this.columnScriptScheduleID.AllowDBNull = false;
                this.columnScriptScheduleID.Unique = true;
                this.columnHasHoursOfOperation.DefaultValue = ((bool)(false));
                this.columnEnabled.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRow NewScriptSchedulesRow() {
                return ((ScriptSchedulesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScriptSchedulesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ScriptSchedulesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScriptSchedulesRowChanged != null)) {
                    this.ScriptSchedulesRowChanged(this, new ScriptSchedulesRowChangeEvent(((ScriptSchedulesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScriptSchedulesRowChanging != null)) {
                    this.ScriptSchedulesRowChanging(this, new ScriptSchedulesRowChangeEvent(((ScriptSchedulesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScriptSchedulesRowDeleted != null)) {
                    this.ScriptSchedulesRowDeleted(this, new ScriptSchedulesRowChangeEvent(((ScriptSchedulesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScriptSchedulesRowDeleting != null)) {
                    this.ScriptSchedulesRowDeleting(this, new ScriptSchedulesRowChangeEvent(((ScriptSchedulesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveScriptSchedulesRow(ScriptSchedulesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CallButlerDataset ds = new CallButlerDataset();
                xs.Add(ds.GetSchemaSerializable());
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScriptSchedulesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GreetingsRow : global::System.Data.DataRow {
            
            private GreetingsDataTable tableGreetings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GreetingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGreetings = ((GreetingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableGreetings.CustomerIDColumn]));
                }
                set {
                    this[this.tableGreetings.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid GreetingID {
                get {
                    return ((global::System.Guid)(this[this.tableGreetings.GreetingIDColumn]));
                }
                set {
                    this[this.tableGreetings.GreetingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow[] GetLocalizedGreetingsRows() {
                if ((this.Table.ChildRelations["FK_Greetings_LocalizedGreetings"] == null)) {
                    return new LocalizedGreetingsRow[0];
                }
                else {
                    return ((LocalizedGreetingsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Greetings_LocalizedGreetings"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LocalizedGreetingsRow : global::System.Data.DataRow {
            
            private LocalizedGreetingsDataTable tableLocalizedGreetings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocalizedGreetingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocalizedGreetings = ((LocalizedGreetingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid GreetingID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableLocalizedGreetings.GreetingIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GreetingID\' in table \'LocalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocalizedGreetings.GreetingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid LocalizedGreetingID {
                get {
                    return ((global::System.Guid)(this[this.tableLocalizedGreetings.LocalizedGreetingIDColumn]));
                }
                set {
                    this[this.tableLocalizedGreetings.LocalizedGreetingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Data {
                get {
                    if (this.IsDataNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLocalizedGreetings.DataColumn]));
                    }
                }
                set {
                    this[this.tableLocalizedGreetings.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Voice {
                get {
                    if (this.IsVoiceNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLocalizedGreetings.VoiceColumn]));
                    }
                }
                set {
                    this[this.tableLocalizedGreetings.VoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LanguageID {
                get {
                    if (this.IsLanguageIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableLocalizedGreetings.LanguageIDColumn]));
                    }
                }
                set {
                    this[this.tableLocalizedGreetings.LanguageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Type {
                get {
                    try {
                        return ((short)(this[this.tableLocalizedGreetings.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'LocalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLocalizedGreetings.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow GreetingsRow {
                get {
                    return ((GreetingsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Greetings_LocalizedGreetings"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Greetings_LocalizedGreetings"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGreetingIDNull() {
                return this.IsNull(this.tableLocalizedGreetings.GreetingIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGreetingIDNull() {
                this[this.tableLocalizedGreetings.GreetingIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataNull() {
                return this.IsNull(this.tableLocalizedGreetings.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataNull() {
                this[this.tableLocalizedGreetings.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoiceNull() {
                return this.IsNull(this.tableLocalizedGreetings.VoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoiceNull() {
                this[this.tableLocalizedGreetings.VoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguageIDNull() {
                return this.IsNull(this.tableLocalizedGreetings.LanguageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguageIDNull() {
                this[this.tableLocalizedGreetings.LanguageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLocalizedGreetings.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableLocalizedGreetings.TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CallHistoryRow : global::System.Data.DataRow {
            
            private CallHistoryDataTable tableCallHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCallHistory = ((CallHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableCallHistory.CustomerIDColumn]));
                }
                set {
                    this[this.tableCallHistory.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid CallID {
                get {
                    return ((global::System.Guid)(this[this.tableCallHistory.CallIDColumn]));
                }
                set {
                    this[this.tableCallHistory.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallHistory.TimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Timestamp\' in table \'CallHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallHistory.TimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerDisplayName {
                get {
                    if (this.IsCallerDisplayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.CallerDisplayNameColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.CallerDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerUsername {
                get {
                    if (this.IsCallerUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.CallerUsernameColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.CallerUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerHost {
                get {
                    if (this.IsCallerHostNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.CallerHostColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.CallerHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan CallDuration {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableCallHistory.CallDurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallDuration\' in table \'CallHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallHistory.CallDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToDisplayName {
                get {
                    if (this.IsToDisplayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.ToDisplayNameColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.ToDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToUsername {
                get {
                    if (this.IsToUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.ToUsernameColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.ToUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ToHost {
                get {
                    if (this.IsToHostNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableCallHistory.ToHostColumn]));
                    }
                }
                set {
                    this[this.tableCallHistory.ToHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimestampNull() {
                return this.IsNull(this.tableCallHistory.TimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimestampNull() {
                this[this.tableCallHistory.TimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerDisplayNameNull() {
                return this.IsNull(this.tableCallHistory.CallerDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerDisplayNameNull() {
                this[this.tableCallHistory.CallerDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerUsernameNull() {
                return this.IsNull(this.tableCallHistory.CallerUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerUsernameNull() {
                this[this.tableCallHistory.CallerUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerHostNull() {
                return this.IsNull(this.tableCallHistory.CallerHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerHostNull() {
                this[this.tableCallHistory.CallerHostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallDurationNull() {
                return this.IsNull(this.tableCallHistory.CallDurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallDurationNull() {
                this[this.tableCallHistory.CallDurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDisplayNameNull() {
                return this.IsNull(this.tableCallHistory.ToDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDisplayNameNull() {
                this[this.tableCallHistory.ToDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToUsernameNull() {
                return this.IsNull(this.tableCallHistory.ToUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToUsernameNull() {
                this[this.tableCallHistory.ToUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToHostNull() {
                return this.IsNull(this.tableCallHistory.ToHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToHostNull() {
                this[this.tableCallHistory.ToHostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartmentsRow : global::System.Data.DataRow {
            
            private DepartmentsDataTable tableDepartments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartments = ((DepartmentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableDepartments.CustomerIDColumn]));
                }
                set {
                    this[this.tableDepartments.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid DepartmentID {
                get {
                    return ((global::System.Guid)(this[this.tableDepartments.DepartmentIDColumn]));
                }
                set {
                    this[this.tableDepartments.DepartmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDepartments.NameColumn]));
                    }
                }
                set {
                    this[this.tableDepartments.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Type {
                get {
                    try {
                        return ((short)(this[this.tableDepartments.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'Departments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartments.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Data1 {
                get {
                    if (this.IsData1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDepartments.Data1Column]));
                    }
                }
                set {
                    this[this.tableDepartments.Data1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Data2 {
                get {
                    if (this.IsData2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDepartments.Data2Column]));
                    }
                }
                set {
                    this[this.tableDepartments.Data2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enabled {
                get {
                    try {
                        return ((bool)(this[this.tableDepartments.EnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Enabled\' in table \'Departments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartments.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OptionNumber {
                get {
                    try {
                        return ((int)(this[this.tableDepartments.OptionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OptionNumber\' in table \'Departments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartments.OptionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableDepartments.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableDepartments.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tableDepartments.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tableDepartments.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsData1Null() {
                return this.IsNull(this.tableDepartments.Data1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetData1Null() {
                this[this.tableDepartments.Data1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsData2Null() {
                return this.IsNull(this.tableDepartments.Data2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetData2Null() {
                this[this.tableDepartments.Data2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnabledNull() {
                return this.IsNull(this.tableDepartments.EnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnabledNull() {
                this[this.tableDepartments.EnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptionNumberNull() {
                return this.IsNull(this.tableDepartments.OptionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptionNumberNull() {
                this[this.tableDepartments.OptionNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExtensionsRow : global::System.Data.DataRow {
            
            private ExtensionsDataTable tableExtensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExtensions = ((ExtensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableExtensions.CustomerIDColumn]));
                }
                set {
                    this[this.tableExtensions.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ExtensionID {
                get {
                    return ((global::System.Guid)(this[this.tableExtensions.ExtensionIDColumn]));
                }
                set {
                    this[this.tableExtensions.ExtensionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ExtensionNumber {
                get {
                    return ((short)(this[this.tableExtensions.ExtensionNumberColumn]));
                }
                set {
                    this[this.tableExtensions.ExtensionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    if (this.IsFirstNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.FirstNameColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    if (this.IsLastNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.LastNameColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SearchNumber {
                get {
                    if (this.IsSearchNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.SearchNumberColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.SearchNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableSearch {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.EnableSearchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnableSearch\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.EnableSearchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    if (this.IsPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.PasswordColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableManagement {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.EnableManagementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnableManagement\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.EnableManagementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DoNotDisturb {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.DoNotDisturbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotDisturb\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.DoNotDisturbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmailNotification {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.EmailNotificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailNotification\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.EmailNotificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAddress {
                get {
                    if (this.IsEmailAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.EmailAddressColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.EmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmailAttachment {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.EmailAttachmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailAttachment\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.EmailAttachmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UseFindMePlugin {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.UseFindMePluginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseFindMePlugin\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.UseFindMePluginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FindMePluginData {
                get {
                    if (this.IsFindMePluginDataNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.FindMePluginDataColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.FindMePluginDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UseConferenceTransfer {
                get {
                    try {
                        return ((bool)(this[this.tableExtensions.UseConferenceTransferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseConferenceTransfer\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.UseConferenceTransferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UseCallBlast {
                get {
                    return ((bool)(this[this.tableExtensions.UseCallBlastColumn]));
                }
                set {
                    this[this.tableExtensions.UseCallBlastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PBXPassword {
                get {
                    if (this.IsPBXPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensions.PBXPasswordColumn]));
                    }
                }
                set {
                    this[this.tableExtensions.PBXPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableCallScreening {
                get {
                    return ((bool)(this[this.tableExtensions.EnableCallScreeningColumn]));
                }
                set {
                    this[this.tableExtensions.EnableCallScreeningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableOutboundCalls {
                get {
                    return ((bool)(this[this.tableExtensions.EnableOutboundCallsColumn]));
                }
                set {
                    this[this.tableExtensions.EnableOutboundCallsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid AlternateExtension {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableExtensions.AlternateExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternateExtension\' in table \'Extensions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensions.AlternateExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableExtensions.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableExtensions.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableExtensions.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableExtensions.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchNumberNull() {
                return this.IsNull(this.tableExtensions.SearchNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchNumberNull() {
                this[this.tableExtensions.SearchNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnableSearchNull() {
                return this.IsNull(this.tableExtensions.EnableSearchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnableSearchNull() {
                this[this.tableExtensions.EnableSearchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableExtensions.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPasswordNull() {
                this[this.tableExtensions.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnableManagementNull() {
                return this.IsNull(this.tableExtensions.EnableManagementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnableManagementNull() {
                this[this.tableExtensions.EnableManagementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotDisturbNull() {
                return this.IsNull(this.tableExtensions.DoNotDisturbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotDisturbNull() {
                this[this.tableExtensions.DoNotDisturbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNotificationNull() {
                return this.IsNull(this.tableExtensions.EmailNotificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNotificationNull() {
                this[this.tableExtensions.EmailNotificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAddressNull() {
                return this.IsNull(this.tableExtensions.EmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAddressNull() {
                this[this.tableExtensions.EmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAttachmentNull() {
                return this.IsNull(this.tableExtensions.EmailAttachmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAttachmentNull() {
                this[this.tableExtensions.EmailAttachmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseFindMePluginNull() {
                return this.IsNull(this.tableExtensions.UseFindMePluginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseFindMePluginNull() {
                this[this.tableExtensions.UseFindMePluginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFindMePluginDataNull() {
                return this.IsNull(this.tableExtensions.FindMePluginDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFindMePluginDataNull() {
                this[this.tableExtensions.FindMePluginDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseConferenceTransferNull() {
                return this.IsNull(this.tableExtensions.UseConferenceTransferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseConferenceTransferNull() {
                this[this.tableExtensions.UseConferenceTransferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBXPasswordNull() {
                return this.IsNull(this.tableExtensions.PBXPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBXPasswordNull() {
                this[this.tableExtensions.PBXPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlternateExtensionNull() {
                return this.IsNull(this.tableExtensions.AlternateExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlternateExtensionNull() {
                this[this.tableExtensions.AlternateExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow[] GetExtensionContactNumbersRows() {
                if ((this.Table.ChildRelations["FK_Extensions_ExtensionContactNumbers"] == null)) {
                    return new ExtensionContactNumbersRow[0];
                }
                else {
                    return ((ExtensionContactNumbersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Extensions_ExtensionContactNumbers"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow[] GetVoicemailsRows() {
                if ((this.Table.ChildRelations["FK_Extensions_Voicemails"] == null)) {
                    return new VoicemailsRow[0];
                }
                else {
                    return ((VoicemailsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Extensions_Voicemails"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExtensionContactNumbersRow : global::System.Data.DataRow {
            
            private ExtensionContactNumbersDataTable tableExtensionContactNumbers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExtensionContactNumbersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExtensionContactNumbers = ((ExtensionContactNumbersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ExtensionID {
                get {
                    return ((global::System.Guid)(this[this.tableExtensionContactNumbers.ExtensionIDColumn]));
                }
                set {
                    this[this.tableExtensionContactNumbers.ExtensionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ExtensionContactNumberID {
                get {
                    return ((global::System.Guid)(this[this.tableExtensionContactNumbers.ExtensionContactNumberIDColumn]));
                }
                set {
                    this[this.tableExtensionContactNumbers.ExtensionContactNumberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactNumber {
                get {
                    if (this.IsContactNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensionContactNumbers.ContactNumberColumn]));
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.ContactNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Priority {
                get {
                    try {
                        return ((short)(this[this.tableExtensionContactNumbers.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'ExtensionContactNumbers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoursOfOperation {
                get {
                    if (this.IsHoursOfOperationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableExtensionContactNumbers.HoursOfOperationColumn]));
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.HoursOfOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Timeout {
                get {
                    try {
                        return ((short)(this[this.tableExtensionContactNumbers.TimeoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Timeout\' in table \'ExtensionContactNumbers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.TimeoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HasHoursOfOperation {
                get {
                    try {
                        return ((bool)(this[this.tableExtensionContactNumbers.HasHoursOfOperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasHoursOfOperation\' in table \'ExtensionContactNumbers\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.HasHoursOfOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Online {
                get {
                    try {
                        return ((bool)(this[this.tableExtensionContactNumbers.OnlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Online\' in table \'ExtensionContactNumbers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.OnlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan HoursOfOperationUTCOffset {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableExtensionContactNumbers.HoursOfOperationUTCOffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursOfOperationUTCOffset\' in table \'ExtensionContactNumber" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExtensionContactNumbers.HoursOfOperationUTCOffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CallPBXPhone {
                get {
                    return ((bool)(this[this.tableExtensionContactNumbers.CallPBXPhoneColumn]));
                }
                set {
                    this[this.tableExtensionContactNumbers.CallPBXPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Type {
                get {
                    return ((short)(this[this.tableExtensionContactNumbers.TypeColumn]));
                }
                set {
                    this[this.tableExtensionContactNumbers.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow ExtensionsRow {
                get {
                    return ((ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Extensions_ExtensionContactNumbers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Extensions_ExtensionContactNumbers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNumberNull() {
                return this.IsNull(this.tableExtensionContactNumbers.ContactNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNumberNull() {
                this[this.tableExtensionContactNumbers.ContactNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityNull() {
                return this.IsNull(this.tableExtensionContactNumbers.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityNull() {
                this[this.tableExtensionContactNumbers.PriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoursOfOperationNull() {
                return this.IsNull(this.tableExtensionContactNumbers.HoursOfOperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoursOfOperationNull() {
                this[this.tableExtensionContactNumbers.HoursOfOperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeoutNull() {
                return this.IsNull(this.tableExtensionContactNumbers.TimeoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeoutNull() {
                this[this.tableExtensionContactNumbers.TimeoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasHoursOfOperationNull() {
                return this.IsNull(this.tableExtensionContactNumbers.HasHoursOfOperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasHoursOfOperationNull() {
                this[this.tableExtensionContactNumbers.HasHoursOfOperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineNull() {
                return this.IsNull(this.tableExtensionContactNumbers.OnlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineNull() {
                this[this.tableExtensionContactNumbers.OnlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoursOfOperationUTCOffsetNull() {
                return this.IsNull(this.tableExtensionContactNumbers.HoursOfOperationUTCOffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoursOfOperationUTCOffsetNull() {
                this[this.tableExtensionContactNumbers.HoursOfOperationUTCOffsetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VoicemailsRow : global::System.Data.DataRow {
            
            private VoicemailsDataTable tableVoicemails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VoicemailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVoicemails = ((VoicemailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid VoicemailID {
                get {
                    return ((global::System.Guid)(this[this.tableVoicemails.VoicemailIDColumn]));
                }
                set {
                    this[this.tableVoicemails.VoicemailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ExtensionID {
                get {
                    return ((global::System.Guid)(this[this.tableVoicemails.ExtensionIDColumn]));
                }
                set {
                    this[this.tableVoicemails.ExtensionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Timestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVoicemails.TimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Timestamp\' in table \'Voicemails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoicemails.TimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerDisplayName {
                get {
                    if (this.IsCallerDisplayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableVoicemails.CallerDisplayNameColumn]));
                    }
                }
                set {
                    this[this.tableVoicemails.CallerDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerUsername {
                get {
                    if (this.IsCallerUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableVoicemails.CallerUsernameColumn]));
                    }
                }
                set {
                    this[this.tableVoicemails.CallerUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerHost {
                get {
                    if (this.IsCallerHostNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableVoicemails.CallerHostColumn]));
                    }
                }
                set {
                    this[this.tableVoicemails.CallerHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNew {
                get {
                    try {
                        return ((bool)(this[this.tableVoicemails.IsNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNew\' in table \'Voicemails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVoicemails.IsNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow ExtensionsRow {
                get {
                    return ((ExtensionsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Extensions_Voicemails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Extensions_Voicemails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimestampNull() {
                return this.IsNull(this.tableVoicemails.TimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimestampNull() {
                this[this.tableVoicemails.TimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerDisplayNameNull() {
                return this.IsNull(this.tableVoicemails.CallerDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerDisplayNameNull() {
                this[this.tableVoicemails.CallerDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerUsernameNull() {
                return this.IsNull(this.tableVoicemails.CallerUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerUsernameNull() {
                this[this.tableVoicemails.CallerUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerHostNull() {
                return this.IsNull(this.tableVoicemails.CallerHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerHostNull() {
                this[this.tableVoicemails.CallerHostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNewNull() {
                return this.IsNull(this.tableVoicemails.IsNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNewNull() {
                this[this.tableVoicemails.IsNewColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PersonalizedGreetingsRow : global::System.Data.DataRow {
            
            private PersonalizedGreetingsDataTable tablePersonalizedGreetings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PersonalizedGreetingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePersonalizedGreetings = ((PersonalizedGreetingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tablePersonalizedGreetings.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'PersonalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid PersonalizedGreetingID {
                get {
                    return ((global::System.Guid)(this[this.tablePersonalizedGreetings.PersonalizedGreetingIDColumn]));
                }
                set {
                    this[this.tablePersonalizedGreetings.PersonalizedGreetingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerDisplayName {
                get {
                    if (this.IsCallerDisplayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.CallerDisplayNameColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.CallerDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerUsername {
                get {
                    if (this.IsCallerUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.CallerUsernameColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.CallerUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallerHost {
                get {
                    if (this.IsCallerHostNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.CallerHostColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.CallerHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DialedUsername {
                get {
                    if (this.IsDialedUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.DialedUsernameColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.DialedUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DialedHost {
                get {
                    if (this.IsDialedHostNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.DialedHostColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.DialedHostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UseRegex {
                get {
                    try {
                        return ((bool)(this[this.tablePersonalizedGreetings.UseRegexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseRegex\' in table \'PersonalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.UseRegexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Type {
                get {
                    try {
                        return ((short)(this[this.tablePersonalizedGreetings.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'PersonalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Data {
                get {
                    if (this.IsDataNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.DataColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PlayOnce {
                get {
                    try {
                        return ((bool)(this[this.tablePersonalizedGreetings.PlayOnceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlayOnce\' in table \'PersonalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.PlayOnceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HasPlayed {
                get {
                    try {
                        return ((bool)(this[this.tablePersonalizedGreetings.HasPlayedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasPlayed\' in table \'PersonalizedGreetings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.HasPlayedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Notes {
                get {
                    if (this.IsNotesNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePersonalizedGreetings.NotesColumn]));
                    }
                }
                set {
                    this[this.tablePersonalizedGreetings.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablePersonalizedGreetings.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablePersonalizedGreetings.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerDisplayNameNull() {
                return this.IsNull(this.tablePersonalizedGreetings.CallerDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerDisplayNameNull() {
                this[this.tablePersonalizedGreetings.CallerDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerUsernameNull() {
                return this.IsNull(this.tablePersonalizedGreetings.CallerUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerUsernameNull() {
                this[this.tablePersonalizedGreetings.CallerUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallerHostNull() {
                return this.IsNull(this.tablePersonalizedGreetings.CallerHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallerHostNull() {
                this[this.tablePersonalizedGreetings.CallerHostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDialedUsernameNull() {
                return this.IsNull(this.tablePersonalizedGreetings.DialedUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDialedUsernameNull() {
                this[this.tablePersonalizedGreetings.DialedUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDialedHostNull() {
                return this.IsNull(this.tablePersonalizedGreetings.DialedHostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDialedHostNull() {
                this[this.tablePersonalizedGreetings.DialedHostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseRegexNull() {
                return this.IsNull(this.tablePersonalizedGreetings.UseRegexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseRegexNull() {
                this[this.tablePersonalizedGreetings.UseRegexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeNull() {
                return this.IsNull(this.tablePersonalizedGreetings.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeNull() {
                this[this.tablePersonalizedGreetings.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataNull() {
                return this.IsNull(this.tablePersonalizedGreetings.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataNull() {
                this[this.tablePersonalizedGreetings.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlayOnceNull() {
                return this.IsNull(this.tablePersonalizedGreetings.PlayOnceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlayOnceNull() {
                this[this.tablePersonalizedGreetings.PlayOnceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasPlayedNull() {
                return this.IsNull(this.tablePersonalizedGreetings.HasPlayedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasPlayedNull() {
                this[this.tablePersonalizedGreetings.HasPlayedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotesNull() {
                return this.IsNull(this.tablePersonalizedGreetings.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotesNull() {
                this[this.tablePersonalizedGreetings.NotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProvidersRow : global::System.Data.DataRow {
            
            private ProvidersDataTable tableProviders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProvidersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProviders = ((ProvidersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableProviders.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'Providers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ProviderID {
                get {
                    return ((global::System.Guid)(this[this.tableProviders.ProviderIDColumn]));
                }
                set {
                    this[this.tableProviders.ProviderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.NameColumn]));
                    }
                }
                set {
                    this[this.tableProviders.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisplayName {
                get {
                    if (this.IsDisplayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.DisplayNameColumn]));
                    }
                }
                set {
                    this[this.tableProviders.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Username {
                get {
                    if (this.IsUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.UsernameColumn]));
                    }
                }
                set {
                    this[this.tableProviders.UsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthUsername {
                get {
                    if (this.IsAuthUsernameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.AuthUsernameColumn]));
                    }
                }
                set {
                    this[this.tableProviders.AuthUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthPassword {
                get {
                    if (this.IsAuthPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.AuthPasswordColumn]));
                    }
                }
                set {
                    this[this.tableProviders.AuthPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Domain {
                get {
                    if (this.IsDomainNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.DomainColumn]));
                    }
                }
                set {
                    this[this.tableProviders.DomainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIPProxy {
                get {
                    if (this.IsSIPProxyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.SIPProxyColumn]));
                    }
                }
                set {
                    this[this.tableProviders.SIPProxyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIPRegistrar {
                get {
                    if (this.IsSIPRegistrarNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.SIPRegistrarColumn]));
                    }
                }
                set {
                    this[this.tableProviders.SIPRegistrarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Expires {
                get {
                    return ((int)(this[this.tableProviders.ExpiresColumn]));
                }
                set {
                    this[this.tableProviders.ExpiresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnabled {
                get {
                    try {
                        return ((bool)(this[this.tableProviders.IsEnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsEnabled\' in table \'Providers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.IsEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableProviders.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'Providers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDefault {
                get {
                    try {
                        return ((bool)(this[this.tableProviders.IsDefaultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDefault\' in table \'Providers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.IsDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableRegistration {
                get {
                    try {
                        return ((bool)(this[this.tableProviders.EnableRegistrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnableRegistration\' in table \'Providers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.EnableRegistrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraData {
                get {
                    if (this.IsExtraDataNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.ExtraDataColumn]));
                    }
                }
                set {
                    this[this.tableProviders.ExtraDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PluginID {
                get {
                    if (this.IsPluginIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProviders.PluginIDColumn]));
                    }
                }
                set {
                    this[this.tableProviders.PluginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutoDetectAudio {
                get {
                    return ((bool)(this[this.tableProviders.AutoDetectAudioColumn]));
                }
                set {
                    this[this.tableProviders.AutoDetectAudioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SupressOutboundUsername {
                get {
                    return ((bool)(this[this.tableProviders.SupressOutboundUsernameColumn]));
                }
                set {
                    this[this.tableProviders.SupressOutboundUsernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableProviders.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableProviders.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableProviders.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableProviders.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tableProviders.DisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayNameNull() {
                this[this.tableProviders.DisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsernameNull() {
                return this.IsNull(this.tableProviders.UsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsernameNull() {
                this[this.tableProviders.UsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthUsernameNull() {
                return this.IsNull(this.tableProviders.AuthUsernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthUsernameNull() {
                this[this.tableProviders.AuthUsernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthPasswordNull() {
                return this.IsNull(this.tableProviders.AuthPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthPasswordNull() {
                this[this.tableProviders.AuthPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDomainNull() {
                return this.IsNull(this.tableProviders.DomainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDomainNull() {
                this[this.tableProviders.DomainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPProxyNull() {
                return this.IsNull(this.tableProviders.SIPProxyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPProxyNull() {
                this[this.tableProviders.SIPProxyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIPRegistrarNull() {
                return this.IsNull(this.tableProviders.SIPRegistrarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIPRegistrarNull() {
                this[this.tableProviders.SIPRegistrarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsEnabledNull() {
                return this.IsNull(this.tableProviders.IsEnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsEnabledNull() {
                this[this.tableProviders.IsEnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableProviders.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableProviders.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsDefaultNull() {
                return this.IsNull(this.tableProviders.IsDefaultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsDefaultNull() {
                this[this.tableProviders.IsDefaultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnableRegistrationNull() {
                return this.IsNull(this.tableProviders.EnableRegistrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnableRegistrationNull() {
                this[this.tableProviders.EnableRegistrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraDataNull() {
                return this.IsNull(this.tableProviders.ExtraDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraDataNull() {
                this[this.tableProviders.ExtraDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPluginIDNull() {
                return this.IsNull(this.tableProviders.PluginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPluginIDNull() {
                this[this.tableProviders.PluginIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ScriptSchedulesRow : global::System.Data.DataRow {
            
            private ScriptSchedulesDataTable tableScriptSchedules;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScriptSchedulesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScriptSchedules = ((ScriptSchedulesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerID {
                get {
                    try {
                        return ((int)(this[this.tableScriptSchedules.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'ScriptSchedules\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScriptSchedules.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ScriptScheduleID {
                get {
                    return ((global::System.Guid)(this[this.tableScriptSchedules.ScriptScheduleIDColumn]));
                }
                set {
                    this[this.tableScriptSchedules.ScriptScheduleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScriptLocation {
                get {
                    if (this.IsScriptLocationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableScriptSchedules.ScriptLocationColumn]));
                    }
                }
                set {
                    this[this.tableScriptSchedules.ScriptLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Priority {
                get {
                    try {
                        return ((int)(this[this.tableScriptSchedules.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'ScriptSchedules\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScriptSchedules.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool HasHoursOfOperation {
                get {
                    try {
                        return ((bool)(this[this.tableScriptSchedules.HasHoursOfOperationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasHoursOfOperation\' in table \'ScriptSchedules\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScriptSchedules.HasHoursOfOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HoursOfOperation {
                get {
                    if (this.IsHoursOfOperationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableScriptSchedules.HoursOfOperationColumn]));
                    }
                }
                set {
                    this[this.tableScriptSchedules.HoursOfOperationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableScriptSchedules.NameColumn]));
                    }
                }
                set {
                    this[this.tableScriptSchedules.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enabled {
                get {
                    try {
                        return ((bool)(this[this.tableScriptSchedules.EnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Enabled\' in table \'ScriptSchedules\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScriptSchedules.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.TimeSpan HoursOfOperationUTCOffset {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableScriptSchedules.HoursOfOperationUTCOffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoursOfOperationUTCOffset\' in table \'ScriptSchedules\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableScriptSchedules.HoursOfOperationUTCOffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableScriptSchedules.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableScriptSchedules.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScriptLocationNull() {
                return this.IsNull(this.tableScriptSchedules.ScriptLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScriptLocationNull() {
                this[this.tableScriptSchedules.ScriptLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityNull() {
                return this.IsNull(this.tableScriptSchedules.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityNull() {
                this[this.tableScriptSchedules.PriorityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasHoursOfOperationNull() {
                return this.IsNull(this.tableScriptSchedules.HasHoursOfOperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasHoursOfOperationNull() {
                this[this.tableScriptSchedules.HasHoursOfOperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoursOfOperationNull() {
                return this.IsNull(this.tableScriptSchedules.HoursOfOperationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoursOfOperationNull() {
                this[this.tableScriptSchedules.HoursOfOperationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableScriptSchedules.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableScriptSchedules.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnabledNull() {
                return this.IsNull(this.tableScriptSchedules.EnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnabledNull() {
                this[this.tableScriptSchedules.EnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHoursOfOperationUTCOffsetNull() {
                return this.IsNull(this.tableScriptSchedules.HoursOfOperationUTCOffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHoursOfOperationUTCOffsetNull() {
                this[this.tableScriptSchedules.HoursOfOperationUTCOffsetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GreetingsRowChangeEvent : global::System.EventArgs {
            
            private GreetingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRowChangeEvent(GreetingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GreetingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LocalizedGreetingsRowChangeEvent : global::System.EventArgs {
            
            private LocalizedGreetingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRowChangeEvent(LocalizedGreetingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalizedGreetingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CallHistoryRowChangeEvent : global::System.EventArgs {
            
            private CallHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRowChangeEvent(CallHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartmentsRowChangeEvent : global::System.EventArgs {
            
            private DepartmentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRowChangeEvent(DepartmentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExtensionsRowChangeEvent : global::System.EventArgs {
            
            private ExtensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRowChangeEvent(ExtensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExtensionContactNumbersRowChangeEvent : global::System.EventArgs {
            
            private ExtensionContactNumbersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRowChangeEvent(ExtensionContactNumbersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExtensionContactNumbersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VoicemailsRowChangeEvent : global::System.EventArgs {
            
            private VoicemailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRowChangeEvent(VoicemailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VoicemailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PersonalizedGreetingsRowChangeEvent : global::System.EventArgs {
            
            private PersonalizedGreetingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRowChangeEvent(PersonalizedGreetingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonalizedGreetingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProvidersRowChangeEvent : global::System.EventArgs {
            
            private ProvidersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRowChangeEvent(ProvidersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProvidersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ScriptSchedulesRowChangeEvent : global::System.EventArgs {
            
            private ScriptSchedulesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRowChangeEvent(ScriptSchedulesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScriptSchedulesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591