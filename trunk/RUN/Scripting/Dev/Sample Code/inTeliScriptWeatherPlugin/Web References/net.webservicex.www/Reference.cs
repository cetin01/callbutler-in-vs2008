//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.312.
// 
#pragma warning disable 1591

namespace inTeliScriptWeatherPlugin.net.webservicex.www {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WeatherForecastSoap", Namespace="http://www.webservicex.net")]
    public partial class WeatherForecast : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWeatherByZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWeatherByPlaceNameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WeatherForecast() {
            this.Url = global::inTeliScriptWeatherPlugin.Properties.Settings.Default.inTeliScriptWeatherPlugin_net_webservicex_www_WeatherForecast;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWeatherByZipCodeCompletedEventHandler GetWeatherByZipCodeCompleted;
        
        /// <remarks/>
        public event GetWeatherByPlaceNameCompletedEventHandler GetWeatherByPlaceNameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webservicex.net/GetWeatherByZipCode", RequestNamespace="http://www.webservicex.net", ResponseNamespace="http://www.webservicex.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WeatherForecasts GetWeatherByZipCode(string ZipCode) {
            object[] results = this.Invoke("GetWeatherByZipCode", new object[] {
                        ZipCode});
            return ((WeatherForecasts)(results[0]));
        }
        
        /// <remarks/>
        public void GetWeatherByZipCodeAsync(string ZipCode) {
            this.GetWeatherByZipCodeAsync(ZipCode, null);
        }
        
        /// <remarks/>
        public void GetWeatherByZipCodeAsync(string ZipCode, object userState) {
            if ((this.GetWeatherByZipCodeOperationCompleted == null)) {
                this.GetWeatherByZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeatherByZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetWeatherByZipCode", new object[] {
                        ZipCode}, this.GetWeatherByZipCodeOperationCompleted, userState);
        }
        
        private void OnGetWeatherByZipCodeOperationCompleted(object arg) {
            if ((this.GetWeatherByZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeatherByZipCodeCompleted(this, new GetWeatherByZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webservicex.net/GetWeatherByPlaceName", RequestNamespace="http://www.webservicex.net", ResponseNamespace="http://www.webservicex.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WeatherForecasts GetWeatherByPlaceName(string PlaceName) {
            object[] results = this.Invoke("GetWeatherByPlaceName", new object[] {
                        PlaceName});
            return ((WeatherForecasts)(results[0]));
        }
        
        /// <remarks/>
        public void GetWeatherByPlaceNameAsync(string PlaceName) {
            this.GetWeatherByPlaceNameAsync(PlaceName, null);
        }
        
        /// <remarks/>
        public void GetWeatherByPlaceNameAsync(string PlaceName, object userState) {
            if ((this.GetWeatherByPlaceNameOperationCompleted == null)) {
                this.GetWeatherByPlaceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeatherByPlaceNameOperationCompleted);
            }
            this.InvokeAsync("GetWeatherByPlaceName", new object[] {
                        PlaceName}, this.GetWeatherByPlaceNameOperationCompleted, userState);
        }
        
        private void OnGetWeatherByPlaceNameOperationCompleted(object arg) {
            if ((this.GetWeatherByPlaceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeatherByPlaceNameCompleted(this, new GetWeatherByPlaceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net")]
    public partial class WeatherForecasts {
        
        private float latitudeField;
        
        private float longitudeField;
        
        private float allocationFactorField;
        
        private string fipsCodeField;
        
        private string placeNameField;
        
        private string stateCodeField;
        
        private string statusField;
        
        private WeatherData[] detailsField;
        
        /// <remarks/>
        public float Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public float Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public float AllocationFactor {
            get {
                return this.allocationFactorField;
            }
            set {
                this.allocationFactorField = value;
            }
        }
        
        /// <remarks/>
        public string FipsCode {
            get {
                return this.fipsCodeField;
            }
            set {
                this.fipsCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public string StateCode {
            get {
                return this.stateCodeField;
            }
            set {
                this.stateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public WeatherData[] Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webservicex.net")]
    public partial class WeatherData {
        
        private string dayField;
        
        private string weatherImageField;
        
        private string maxTemperatureFField;
        
        private string minTemperatureFField;
        
        private string maxTemperatureCField;
        
        private string minTemperatureCField;
        
        /// <remarks/>
        public string Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        public string WeatherImage {
            get {
                return this.weatherImageField;
            }
            set {
                this.weatherImageField = value;
            }
        }
        
        /// <remarks/>
        public string MaxTemperatureF {
            get {
                return this.maxTemperatureFField;
            }
            set {
                this.maxTemperatureFField = value;
            }
        }
        
        /// <remarks/>
        public string MinTemperatureF {
            get {
                return this.minTemperatureFField;
            }
            set {
                this.minTemperatureFField = value;
            }
        }
        
        /// <remarks/>
        public string MaxTemperatureC {
            get {
                return this.maxTemperatureCField;
            }
            set {
                this.maxTemperatureCField = value;
            }
        }
        
        /// <remarks/>
        public string MinTemperatureC {
            get {
                return this.minTemperatureCField;
            }
            set {
                this.minTemperatureCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetWeatherByZipCodeCompletedEventHandler(object sender, GetWeatherByZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWeatherByZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWeatherByZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WeatherForecasts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WeatherForecasts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetWeatherByPlaceNameCompletedEventHandler(object sender, GetWeatherByPlaceNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWeatherByPlaceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWeatherByPlaceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WeatherForecasts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WeatherForecasts)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591